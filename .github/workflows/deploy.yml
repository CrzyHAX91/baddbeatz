name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install dependencies without psycopg2-binary for static site deployment
        pip install flask==2.3.2 flask-sqlalchemy==3.0.3 python-dotenv==1.0.0 werkzeug==3.0.6
        pip install requests==2.32.4 gunicorn==23.0.0 || echo "Optional dependencies skipped"
    
    - name: Install Node dependencies
      run: |
        npm install
    
    - name: Build static site
      run: |
        # Create docs directory for GitHub Pages
        mkdir -p docs
        
        # Copy static files
        cp -r assets docs/
        cp *.html docs/
        cp robots.txt docs/ || true
        cp sitemap.xml docs/ || true
        cp CNAME docs/ || true
        cp -r data docs/ || true
        
        # Generate any dynamic content using Node.js
        node scripts/build-docs.cjs || echo "Build script not found, using static files"
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
