name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-github-pages:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./baddbeatz
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          echo "No requirements.txt found, skipping Python dependencies"
        fi
    
    - name: Install Node dependencies
      run: |
        if [ -f package.json ]; then
          npm install
        else
          echo "No package.json found, skipping Node dependencies"
        fi
    
    - name: Build static site
      run: |
        # Create docs directory for GitHub Pages
        mkdir -p docs
        
        # Copy static files with error handling
        if [ -d "assets" ]; then
          cp -r assets docs/
        else
          echo "Warning: assets directory not found"
          mkdir -p docs/assets
        fi
        
        # Copy HTML files
        for file in *.html; do
          if [ -f "$file" ]; then
            cp "$file" docs/
          fi
        done
        
        # Copy other required files if they exist
        [ -f "robots.txt" ] && cp robots.txt docs/ || echo "robots.txt not found, skipping"
        [ -f "sitemap.xml" ] && cp sitemap.xml docs/ || echo "sitemap.xml not found, skipping"
        [ -f "CNAME" ] && cp CNAME docs/ || echo "CNAME not found, skipping"
        
        # Copy data directory if it exists
        if [ -d "data" ]; then
          cp -r data docs/
        else
          echo "Warning: data directory not found, creating empty directory"
          mkdir -p docs/data
        fi
        
        # Copy manifest and service worker for PWA
        [ -f "manifest.json" ] && cp manifest.json docs/ || echo "manifest.json not found, skipping"
        [ -f "service-worker.js" ] && cp service-worker.js docs/ || echo "service-worker.js not found, skipping"
        [ -f "offline.html" ] && cp offline.html docs/ || echo "offline.html not found, skipping"
        
        # Generate any dynamic content using Node.js if script exists
        if [ -f "scripts/build-docs.cjs" ]; then
          node scripts/build-docs.cjs
        else
          echo "build-docs.cjs not found, skipping dynamic content generation"
        fi
        
        # List contents for debugging
        echo "Contents of docs directory:"
        ls -la docs/
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './baddbeatz/docs'

  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-github-pages
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
