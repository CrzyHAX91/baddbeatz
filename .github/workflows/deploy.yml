name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Install Node dependencies
      run: |
        if [ -f package.json ]; then npm ci; fi
    
    - name: Build static site
      run: |
        # Create docs directory for GitHub Pages
        mkdir -p docs
        
        # Copy static files with error handling
        if [ -d "assets" ]; then cp -r assets docs/; fi
        if [ -f "*.html" ]; then cp *.html docs/ 2>/dev/null || true; fi
        if [ -f "robots.txt" ]; then cp robots.txt docs/; fi
        if [ -f "sitemap.xml" ]; then cp sitemap.xml docs/; fi
        if [ -f "CNAME" ]; then cp CNAME docs/; fi
        if [ -d "data" ]; then cp -r data docs/; fi
        if [ -f "manifest.json" ]; then cp manifest.json docs/; fi
        if [ -f "service-worker.js" ]; then cp service-worker.js docs/; fi
        if [ -f "offline.html" ]; then cp offline.html docs/; fi
        
        # Copy LiteLLM documentation if exists
        if [ -f "LITELLM_CONTEXT_WINDOW_FIX_GUIDE.md" ]; then cp LITELLM_CONTEXT_WINDOW_FIX_GUIDE.md docs/; fi
        if [ -f "QUICK_FIX_REFERENCE.md" ]; then cp QUICK_FIX_REFERENCE.md docs/; fi
        
        # Generate any dynamic content using Node.js if script exists
        if [ -f "scripts/build-docs.cjs" ]; then node scripts/build-docs.cjs; fi
        
        # Ensure index.html exists
        if [ ! -f "docs/index.html" ] && [ -f "index.html" ]; then
          cp index.html docs/
        fi
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
